datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                Int      @id @default(autoincrement())
  email             String   @unique
  first_name        String
  last_name         String
  spaces            Space[]
  role              Role     @default(USER)
  registration_date DateTime @default(now())
}

model Space {
  id            Int        @id @default(autoincrement())
  space_type    Space_Type @default(HOUSE)
  name          String
  description   String
  availability  String     @default("Available")
  price         String
  user          User       @relation(fields: [userId], references: [id])
  userId        Int
  creation_date DateTime   @default(now())
  images        Image[]
  location      Location[]
}

model Image {
  id          Int        @id @default(autoincrement())
  image_type  Image_Type @default(SPACE)
  url         String
  description String?
  space       Space      @relation(fields: [spaceId], references: [id])
  spaceId     Int
}

model Location {
  id          Int    @id @default(autoincrement())
  space       Space  @relation(fields: [spaceId], references: [id])
  spaceId     Int
  country     String
  province    String
  city        String
  address     String
  postal_code String
}

enum Role {
  USER
  ADMIN
}

enum Space_Type {
  HOUSE
  ROOM
  ITEM
  VEHICLE
}

enum Image_Type {
  COVER
  PROFILE
  SPACE
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int     @id @default(autoincrement())
  email      String  @unique
  first_name String
  last_name  String
  spaces     Space[]
  role       Role    @default(USER)
}

model Space {
  id           Int    @id @default(autoincrement())
  name         String
  description  String
  availability String
  price        String
  imageUrl     String
  user         User   @relation(fields: [userId], references: [id])
  userId       Int
}

// bookings

// spaces

enum Role {
  USER
  ADMIN
}
